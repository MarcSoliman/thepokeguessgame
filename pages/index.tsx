import type { GetServerSideProps, NextPage } from "next";
import Head from "next/head";
import Image from "next/image";
import PokeGuessApp from "../components/PokeGuessApp";
import TitleBar from "../components/TitleBar";
import { StyledBackgroundContainer } from "../././components/styles.js";
import axios from "axios";
import { useEffect, useState } from "react";

const Home: NextPage = () => {
  const [pokemonRImage, setPokemonRImage] = useState("");
  const [pokemonLImage, setPokemonLImage] = useState(" ");

  const GeneratedQuestion: string = "Is Heavier?";

  const randomPokemon: (inUseID?: number) => number = (inUseID) => {
    const pokemonID = Math.floor(Math.random() * 800 + 1);

    if (pokemonID !== inUseID) return pokemonID;
    return randomPokemon(inUseID);
  };

  const generatePokemon = () => {
    const pokemonRight = randomPokemon();
    const pokemonLeft = randomPokemon(pokemonRight);

    return [pokemonRight, pokemonLeft];
  };

  const [pokemonRight, pokemonLeft] = generatePokemon();
  console.log(pokemonRight);
  console.log(pokemonLeft);
  const pokeImages = () => {
    axios.get("/api/pokeapi/" + JSON.stringify(pokemonRight)).then((result) => {
      setPokemonRImage(result.data.sprite);
    });
    axios.get("/api/pokeapi/" + JSON.stringify(pokemonLeft)).then((result) => {
      setPokemonLImage(result.data.sprite);
    });
  };
  useEffect(() => {}, []);
  useEffect(() => {
    pokeImages();
  }, []);
  return (
    <StyledBackgroundContainer>
      <Head>
        <title>The PokeGuess Game</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <TitleBar />
      <PokeGuessApp
        pokemonRImage={pokemonRImage}
        pokemonLImage={pokemonLImage}
        GeneratedQuestion={GeneratedQuestion}
      />
    </StyledBackgroundContainer>
  );
};

export default Home;

export async function getServerSideProps(context: GetServerSideProps) {
  return {
    props: {}, // will be passed to the page component as props
  };
}
